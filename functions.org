* Functions

Any custom functions should be defined in this fine. Things for which a seperate package
is unavailable, or simply unecessary.

** Uncomment / Comment

This function simply uncomments a line or region based on the language which is currently
being used. Gloal keybindings defined in the ~bindings.org~ file.

#+BEGIN_SRC emacs-lisp :tangle yes
;; Comment/uncomment shortcut
(defun comment-or-uncomment-region-or-line ()
    "Comments or uncomments the region or the current line if there's no active region."
    (interactive)
    (let (beg end)
        (if (region-active-p)
            (setq beg (region-beginning) end (region-end))
            (setq beg (line-beginning-position) end (line-end-position)))
        (comment-or-uncomment-region beg end)))
#+END_SRC

** Rename File & Buffer

One of my favorites. Renames a file, as well as the active buffer. It feels like this should
exist already in emacs, yet it doesn't. "Borrowed" from [[http://steve.yegge.googlepages.com/my-dot-emacs-file][Steve Yegge]].

#+BEGIN_SRC emacs-lisp :tangle yes
(defun rename-file-and-buffer (new-name)
  "Renames both current buffer and file it's visiting to NEW-NAME."
  (interactive "sNew name: ")
  (let ((name (buffer-name))
        (filename (buffer-file-name)))
    (if (not filename)
        (message "Buffer '%s' is not visiting a file!" name)
      (if (get-buffer new-name)
          (message "A buffer named '%s' already exists!" new-name)
        (progn
          (rename-file name new-name 1)
          (rename-buffer new-name)
          (set-visited-file-name new-name)
          (set-buffer-modified-p nil))))))
#+END_SRC

** Pin Buffer

Used to pin a buffer/window to prevent it from resizing, splitting, etc.

#+BEGIN_SRC emacs-lisp :tangle yes
(defun pin-buffer ()
  "Pin buffer to current window."
  (interactive)
  (message
   (if (let (window (get-buffer-window (current-buffer)))
         (set-window-dedicated-p window (not (window-dedicated-p window))))
       "pinned buffer" "un-pinned buffer")
   ))
#+END_SRC
