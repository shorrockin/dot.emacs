* Org Mode

This file is meant to provide a place to centralize all the org-mode config.
It probably doesn't need to be in it's own file, however, in doing so it allows
me to document things as I figure it out.

** Reading Material

Here are some references for org mode that were useful while learning org-mode
better:

  - [[https://blog.aaronbieber.com/2016/01/30/dig-into-org-mode.html]]
  - https://blog.aaronbieber.com/2016/09/24/an-agenda-for-life-with-org-mode.html
  - [[https://orgmode.org/worg/org-faq.html]]
  - https://orgmode.org/worg/org-tutorials/orgtutorial_dto.html
  - https://orgmode.org/manual/In_002dbuffer-settings.html#In_002dbuffer-settings

** Todo Setup

The following sets up our default TODO
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-todo-keywords '((sequence "TODO" "IN-PROGRESS" "WAITING" "|" "DONE" "CANCELED")))
#+END_SRC

These can all be overridden by declaring something like the following at
the head of any org file.

~#+TODO: TODO IN-PROGRESS WAITING | DONE CANCELED~

Forces all child tasks to be marked as done before the parent can
be marked as done.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-enforce-todo-dependencies t)
#+END_SRC

Adds a timestamp annotation for when the task is marked as complete.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-log-done (quote time))
#+END_SRC

Sets up ~org-indent-mode~ to be on by default which [[https://orgmode.org/manual/Clean-view.html][cleans up]] how things are
displayed in regards to indentation.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-startup-indented t)
#+END_SRC

Sets the initial visiblity of an opened file. To define this specifically on
a per file basis check out [[https://orgmode.org/manual/Initial-visibility.html][this]] link. (seo: expand collapse)
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-startup-folded "content")
#+END_SRC

Customizes the ellipsis which indicates when things can be unfolded.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-ellipsis "â€¦")
#+END_SRC

Forces org mode to start with line truncating, wrapping.
#+BEGIN_SRC emacs-lisp :tangle yes
(add-hook 'org-mode-hook 'turn-on-visual-line-mode)
#+END_SRC

Set's the line separator between collapsed trees, see [[https://www.reddit.com/r/orgmode/comments/3c4xdk/spacing_between_items_when_trees_are_folded/][this reddit post]].
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-cycle-separator-lines 2)
#+END_SRC

** Agenda Setup

First we define a home for all our org files. We're going to default to a directory
inside our ~emacs.d~ dir that is git ignored and can be sym-linked to dropbox or
whatever you prefer.

#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-agenda-files '("~/.emacs.d/org"))
#+END_SRC

When we ~M-x 'org-agenda~ this provides a custom view of everything all together bound to ~c~.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-agenda-custom-commands
      '(("c" "Simple agenda view"
         ((agenda "")
          (alltodo "")))))
#+END_SRC

When we ~M-x 'org-agenda~ this provides a custom view of the previous week bound to ~w~.
#+BEGIN_SRC emacs-lisp :tangle yes
(add-to-list 'org-agenda-custom-commands
             '("w" "Weekly review"
               agenda ""
               ((org-agenda-span 'week)
                (org-agenda-start-on-weekday 0)
                (org-agenda-start-with-log-mode t)
                (org-agenda-skip-function
                 '(org-agenda-skip-entry-if 'nottodo 'done))
                 )))
#+END_SRC


** Key Bindings

Here We setup some org-mode bindings to match my preferences, first to undo-the
mappings for shift-<arrow>, as I use these to navigate between my buffers.
#+BEGIN_SRC emacs-lisp :tangle yes
(define-key org-mode-map (kbd "S-<left>") nil)
(define-key org-mode-map (kbd "S-<right>") nil)
(define-key org-mode-map (kbd "S-<up>") nil)
(define-key org-mode-map (kbd "S-<down>") nil)

(evil-define-key 'normal org-mode-map
  "}" 'outline-next-visible-heading
  "{" 'outline-previous-visible-heading)
#+END_SRC

Now we add some evil-mode [[https://github.com/cofi/evil-leader][leader]] bindings to perform some other common tasks
specifically for ~org-mode~.

#+BEGIN_SRC emacs-lisp :tangle yes
(evil-leader/set-key-for-mode 'org-mode
  "a" 'org-toggle-archive-tag
  "t" 'org-shiftright
  "T" 'org-shiftleft
  "1" 'org-priority-up
  "!" 'org-priority-down
  "." 'org-shiftmetaright
  "," 'org-shiftmetaleft
  "S" 'org-sort-entries
  "c" 'org-toggle-checkbox
  "\t" 'org-shifttab
  "<RET>" 'org-insert-todo-heading
  "d" 'org-deadline)
#+END_SRC
